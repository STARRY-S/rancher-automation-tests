name: AWSCN Provisioning Tests
run-name: >-
  ${{ format('[AWSCN] {0} - {1}', inputs.RPM_VERSION, inputs.TEST_CASE) }}

on:
  workflow_dispatch:
    inputs:
      RPM_VERSION:
        description: 'Rancher Version (Ex. v2.11.1-ent-rcX)'
        default: 'v2.10.6-ent-rc2'
        required: true
      K3S_VERSION:
        description: 'K3s version for Rancher Local Cluster'
        default: 'v1.31.9+k3s1'
        required: true
      RPM_LOCAL_NAME:
        description: 'Rancher local cluster name, for run multiple tests'
        default: 'starry-awscn-1'
      TEST_CASE:
        description: "Test case to run, separated by white spaces (Ex. huaweicloud/k3s-openeuler-huaweicloud)"
        required: false
        default: |
          awscn/k3s-ubuntu-awscn awscn/rke2-ubuntu-awscn awscn/rke1-ubuntu-awscn
      RANCHER_CLUSTERS:
        description: 'Downstream cluster versions, separated by white spaces (Ex. v1.24.11+k3s1 v1.24.11+rke2r1)'
        required: true
        default: |
          v1.31.9+rke2r1
            v1.30.13+rke2r1
            v1.31.9+k3s1
            v1.30.13+k3s1
            v1.31.8-rancher1-1
            v1.30.12-rancher1-1
      RANCHER_CODE_REPO:
        description: 'GitHub Repo of rancher'
        required: true
        default: "github.com/cnrancher/pandaria"
      ENVS:
        description: 'Other envs for tests, separated by white spaces (Ex. ENV1=AAA ENV2=BBB)'
        required: false
        default: 'ARM64_ONLY= AMD64_ONLY='

env:
  # Pre-define environment variables
  CATTLE_MACHINE_VERSION: v0.15.0-rancher127
  AUTOK3S_VERSION: v0.9.3

  # ENV defined by workflow dispatch inputs
  RPM_VERSION: ${{ github.event.inputs.RPM_VERSION }}
  K3S_VERSION: ${{ github.event.inputs.K3S_VERSION }}
  RPM_LOCAL_NAME: ${{ github.event.inputs.RPM_LOCAL_NAME }}
  TEST_CASE: ${{ github.event.inputs.TEST_CASE }}
  RANCHER_CLUSTERS: ${{ github.event.inputs.RANCHER_CLUSTERS }}
  RANCHER_CODE_REPO: ${{ github.event.inputs.RANCHER_CODE_REPO }}
  INPUT_ENVS: ${{ github.event.inputs.ENVS }}

  # ENV from secrets
  ADMIN_PWD: ${{ secrets.ADMIN_PWD }}       # Rancher password
  SSH_KEY_PAIR: ${{ secrets.SSH_KEY_PAIR_AWSCN }} # Public Cloud SSH key-pair name (ID)
  SSH_KEY: ${{ secrets.SSH_KEY }}           # SSH secret key filename
  SSH_SECRET_KEY: ${{ secrets.SSH_SECRET_KEY }} # SSH secret key PEM data
  PRIME_REGISTRY_USERNAME: ${{ secrets.PRIME_REGISTRY_USERNAME }}
  PRIME_REGISTRY_PASSWORD: ${{ secrets.PRIME_REGISTRY_PASSWORD }}
  RANCHER_REPO_OAUTH_TOKEN: ${{ secrets.RANCHER_REPO_OAUTH_TOKEN }} # READ ONLY token for access rancher source code repo.

  # AWSCN (China)
  AWSCN_AK: ${{ secrets.AWSCN_AK }}
  AWSCN_SK: ${{ secrets.AWSCN_SK }}
  AWS_AK: ${{ secrets.AWSCN_AK }}
  AWS_SK: ${{ secrets.AWSCN_SK }}
  AWS_REGION: "cn-northwest-1"

  # HWCloud
  HUAWEI_ACCESS_KEY: ${{ secrets.HUAWEI_ACCESS_KEY }}
  HUAWEI_SECRET_KEY: ${{ secrets.HUAWEI_SECRET_KEY }}
  HUAWEI_PROJECT_ID: ${{ secrets.HUAWEI_PROJECT_ID }}
  HUAWEI_REGION_ID: ${{ secrets.HUAWEI_REGION_ID }}

  # Tencent cloud
  TENCENT_ACCESS_KEY_ID: ${{ secrets.TENCENT_ACCESS_KEY_ID }}
  TENCENT_ACCESS_KEY_SECRET: ${{ secrets.TENCENT_ACCESS_KEY_SECRET }}

jobs:
  provisioning-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.24.x
      - name: Build
        run: |
          scripts/build.sh
      - name: Rancher Server on AWS CN
        uses: ./.github/actions/rancher-server
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWSCN_AK }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWSCN_SK }}
        with:
          K3S_VERSION: "${{ env.K3S_VERSION }}"
          SSH_KEY_NAME: ${{ secrets.SSH_KEY }}
          SSH_SECRET_KEY: ${{ secrets.SSH_SECRET_KEY }}
          RPM_LOCAL_NAME: ${{ env.RPM_LOCAL_NAME }}
          AUTOK3S_VERSION: "v0.9.3"
          AUTOK3S_PROVIDER: "aws"
          AUTOK3S_SSH_USER: "ubuntu"
          AUTOK3S_AMI: "ami-063dbdfa885edce48"
          AUTOK3S_INSTANCE_TYPE: "c5a.xlarge"
          AUTOK3S_REGION: "cn-northwest-1"
          AUTOK3S_ZONE: "cn-northwest-1c"
          AUTOK3S_SECURITY_GROUP: "sg-0d0bb6c7aedebaa51"
          AUTOK3S_VOLUME_TYPE: "gp3"
          AUTOK3S_VPC: "vpc-04102d93beaeae434"
          AUTOK3S_SUBNET: "subnet-0ad3642defaf29191"
          DOCKERHUB_USERNAME: ""
          DOCKERHUB_PASSWORD: ""
          PRIME_REGISTRY_USERNAME: ${{ env.PRIME_REGISTRY_USERNAME }}
          PRIME_REGISTRY_PASSWORD: ${{ env.PRIME_REGISTRY_PASSWORD }}
      - name: Setup Environment
        run: |
          sudo mkdir -p /opt/config/autok3s
          sudo chmod 777 /opt/config/autok3s
          touch /opt/config/autok3s/$SSH_KEY
          scripts/ci/setup.sh
      - name: Run Provisioning Tests
        uses: ./.github/actions/run-with-post
        with:
          RUN: "scripts/ci/run-provisioning.sh"
          POST: "scripts/ci/clean.sh aws"
