name: Launch Single Rancher Local Server

on:
  workflow_dispatch:
    inputs:
      RPM_VERSION:
        description: 'Rancher Version (Ex. v2.10.0-ent-rcX)'
        default: 'v2.10.1-ent-rc3'
        required: true
      K3S_VERSION:
        description: 'K3s version for Rancher Local Cluster'
        default: 'v1.29.11+k3s1'
        required: true
      RPM_LOCAL_NAME:
        description: 'Rancher local cluster name, for run multiple tests'
        default: 'starry-custom-1'

env:
  # Pre-define environment variables
  CATTLE_MACHINE_VERSION: v0.15.0-rancher116
  AUTOK3S_VERSION: v0.9.3

  # ENV defined by workflow dispatch inputs
  RPM_VERSION: ${{ github.event.inputs.RPM_VERSION }}
  K3S_VERSION: ${{ github.event.inputs.K3S_VERSION }}
  RPM_LOCAL_NAME: ${{ github.event.inputs.RPM_LOCAL_NAME }}

  # ENV from secrets
  ADMIN_PWD: ${{ secrets.ADMIN_PWD }}       # Rancher password
  SSH_KEY_PAIR: ${{ secrets.SSH_KEY_PAIR_AWSCN }} # Public Cloud SSH key-pair name (ID)
  SSH_KEY: ${{ secrets.SSH_KEY }}           # SSH secret key filename
  SSH_SECRET_KEY: ${{ secrets.SSH_SECRET_KEY }} # SSH secret key PEM data
  PRIME_REGISTRY_USERNAME: ${{ secrets.PRIME_REGISTRY_USERNAME }}
  PRIME_REGISTRY_PASSWORD: ${{ secrets.PRIME_REGISTRY_PASSWORD }}
  RANCHER_REPO_OAUTH_TOKEN: ${{ secrets.RANCHER_REPO_OAUTH_TOKEN }} # READ ONLY token for access rancher source code repo.

  # AWSCN (China)
  AWSCN_AK: ${{ secrets.AWSCN_AK }}
  AWSCN_SK: ${{ secrets.AWSCN_SK }}
  AWS_AK: ${{ secrets.AWSCN_AK }}
  AWS_SK: ${{ secrets.AWSCN_SK }}
  AWS_REGION: "cn-northwest-1"

jobs:
  provisioning-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.x
      - name: Rancher Server
        uses: ./.github/actions/rancher-server
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWSCN_AK }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWSCN_SK }}
        with:
          K3S_VERSION: "${{ env.K3S_VERSION }}"
          SSH_KEY_NAME: ${{ secrets.SSH_KEY }}
          SSH_SECRET_KEY: ${{ secrets.SSH_SECRET_KEY }}
          RPM_LOCAL_NAME: ${{ env.RPM_LOCAL_NAME }}
          AUTOK3S_VERSION: "v0.9.3"
          AUTOK3S_PROVIDER: "aws"
          AUTOK3S_SSH_USER: "ubuntu"
          AUTOK3S_AMI: "ami-063dbdfa885edce48"
          AUTOK3S_INSTANCE_TYPE: "t3a.large"
          AUTOK3S_REGION: "cn-northwest-1"
          AUTOK3S_ZONE: "cn-northwest-1c"
          AUTOK3S_SECURITY_GROUP: "sg-0d0bb6c7aedebaa51"
          AUTOK3S_VOLUME_TYPE: "gp3"
          AUTOK3S_VPC: "vpc-04102d93beaeae434"
          AUTOK3S_SUBNET: "subnet-0ad3642defaf29191"
          DOCKERHUB_USERNAME: ""
          DOCKERHUB_PASSWORD: ""
          PRIME_REGISTRY_USERNAME: ${{ env.PRIME_REGISTRY_USERNAME }}
          PRIME_REGISTRY_PASSWORD: ${{ env.PRIME_REGISTRY_PASSWORD }}
      - name: Waiting for user cancel
        uses: ./.github/actions/run-with-post
        with:
          RUN: |
            bash -c "echo 'Rancher server is available'; sleep 8h"
          POST: "scripts/ci/clean.sh aws"
